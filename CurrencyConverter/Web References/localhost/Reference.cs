//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CurrencyConverter.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyElement[]))]

    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Curr_converterOperationCompleted;
        

        private System.Threading.SendOrPostCallback get_rate_from_apiOperationCompleted;
        
        private System.Threading.SendOrPostCallback createChartOperationCompleted;
        

        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::CurrencyConverter.Properties.Settings.Default.CurrencyConverter_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Curr_converterCompletedEventHandler Curr_converterCompleted;
        
        /// <remarks/>

        public event get_rate_from_apiCompletedEventHandler get_rate_from_apiCompleted;
        
        /// <remarks/>
        public event createChartCompletedEventHandler createChartCompleted;
        
        /// <remarks/>

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Curr_converter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Curr_converter(string curr_from, string curr_to, decimal amount_of_money) {
            object[] results = this.Invoke("Curr_converter", new object[] {
                        curr_from,
                        curr_to,
                        amount_of_money});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Curr_converterAsync(string curr_from, string curr_to, decimal amount_of_money) {
            this.Curr_converterAsync(curr_from, curr_to, amount_of_money, null);
        }
        
        /// <remarks/>
        public void Curr_converterAsync(string curr_from, string curr_to, decimal amount_of_money, object userState) {
            if ((this.Curr_converterOperationCompleted == null)) {
                this.Curr_converterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurr_converterOperationCompleted);
            }
            this.InvokeAsync("Curr_converter", new object[] {
                        curr_from,
                        curr_to,
                        amount_of_money}, this.Curr_converterOperationCompleted, userState);
        }
        
        private void OnCurr_converterOperationCompleted(object arg) {
            if ((this.Curr_converterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Curr_converterCompleted(this, new Curr_converterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_rate_from_api", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal get_rate_from_api(decimal amount_of_money, string from_curr_code, string to_curr_code) {
            object[] results = this.Invoke("get_rate_from_api", new object[] {
                        amount_of_money,
                        from_curr_code,
                        to_curr_code});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void get_rate_from_apiAsync(decimal amount_of_money, string from_curr_code, string to_curr_code) {
            this.get_rate_from_apiAsync(amount_of_money, from_curr_code, to_curr_code, null);
        }
        
        /// <remarks/>
        public void get_rate_from_apiAsync(decimal amount_of_money, string from_curr_code, string to_curr_code, object userState) {
            if ((this.get_rate_from_apiOperationCompleted == null)) {
                this.get_rate_from_apiOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_rate_from_apiOperationCompleted);
            }
            this.InvokeAsync("get_rate_from_api", new object[] {
                        amount_of_money,
                        from_curr_code,
                        to_curr_code}, this.get_rate_from_apiOperationCompleted, userState);
        }
        
        private void Onget_rate_from_apiOperationCompleted(object arg) {
            if ((this.get_rate_from_apiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_rate_from_apiCompleted(this, new get_rate_from_apiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createChart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyElement[] createChart(string from_curr_code, string to_curr_code) {
            object[] results = this.Invoke("createChart", new object[] {
                        from_curr_code,
                        to_curr_code});
            return ((CurrencyElement[])(results[0]));
        }
        
        /// <remarks/>
        public void createChartAsync(string from_curr_code, string to_curr_code) {
            this.createChartAsync(from_curr_code, to_curr_code, null);
        }
        
        /// <remarks/>
        public void createChartAsync(string from_curr_code, string to_curr_code, object userState) {
            if ((this.createChartOperationCompleted == null)) {
                this.createChartOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateChartOperationCompleted);
            }
            this.InvokeAsync("createChart", new object[] {
                        from_curr_code,
                        to_curr_code}, this.createChartOperationCompleted, userState);
        }
        
        private void OncreateChartOperationCompleted(object arg) {
            if ((this.createChartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createChartCompleted(this, new createChartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>

        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CurrencyElement {
        
        private object axisXField;
        
        private double axisYField;
        
        /// <remarks/>
        public object AxisX {
            get {
                return this.axisXField;
            }
            set {
                this.axisXField = value;
            }
        }
        
        /// <remarks/>
        public double AxisY {
            get {
                return this.axisYField;
            }
            set {
                this.axisYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void Curr_converterCompletedEventHandler(object sender, Curr_converterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Curr_converterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Curr_converterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void get_rate_from_apiCompletedEventHandler(object sender, get_rate_from_apiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_rate_from_apiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_rate_from_apiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void createChartCompletedEventHandler(object sender, createChartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createChartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createChartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyElement[])(this.results[0]));
            }
        }
    }

}

#pragma warning restore 1591